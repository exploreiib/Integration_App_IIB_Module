CREATE COMPUTE MODULE MF_CMS_BRK_AuditTrail_GetDetails
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE cSoapAuditId CHARACTER;
		DECLARE cCorrelId CHARACTER;
		DECLARE cMsgId CHARACTER;
		
		SET Environment.AUDIT.SRCE_APPL = COALESCE(InputRoot.XMLNSC.AUDIT.SRCE_APPL, '');
		SET Environment.AUDIT.AUDIT_TYPE  = COALESCE(InputRoot.XMLNSC.AUDIT.AUDIT_TYPE, '');
		SET Environment.AUDIT.AUDIT_FILTER = COALESCE(InputRoot.XMLNSC.AUDIT.AUDIT_FILTER, '');
		SET cSoapAuditId = COALESCE(InputRoot.XMLNSC.AUDIT.SoapAuditId, '');
		
		IF cSoapAuditId IS NULL OR cSoapAuditId = '' THEN -- MQID
			IF InputRoot.MQMD.CorrelId IS NULL THEN
				SET cCorrelId = NULL;
			ELSE
				SET cCorrelId = SUBSTRING ( CAST ( InputRoot.MQMD.CorrelId AS CHARACTER ) FROM 3 FOR 48 );
			END IF;
			
			IF cCorrelId IS NULL OR cCorrelId = '000000000000000000000000000000000000000000000000' THEN
				SET cMsgId = SUBSTRING ( CAST ( InputRoot.MQMD.MsgId AS CHARACTER ) FROM 3 FOR 48 );
			ELSE
				SET cMsgId = SUBSTRING ( CAST ( InputRoot.MQMD.CorrelId AS CHARACTER ) FROM 3 FOR 48 );
			END IF;
			
			SET Environment.AUDIT.MsgId = cMsgId;
			-- SUBSTRING ( CAST ( InputRoot.MQMD.MsgId AS CHARACTER ) FROM 3 FOR 48 );
		ELSE -- SOAP AUDIT ID
			SET Environment.AUDIT.MsgId = cSoapAuditId;
		END IF;

		SET OutputRoot.XMLNSC.WMBAuditBody = InputRoot.XMLNSC.AUDIT.WMBAuditBody;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;